/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define ADJ     3

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
    };
  };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        am: amethyst_modifyers {
            compatible = "zmk,behavior-hold-tap";
            label = "AMETHYST_MODIFYER";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
        compatible = "zmk,keymap";

        default_layer {        
            label = "Default";              					  
		    bindings = <
        &kp GRAVE           &kp Q       &kp W       &kp E       &kp R         &kp T                                             &kp Y                   &kp U         &kp I         &kp O       &kp P           &kp BSLH
        &kp ESC             &kp A &kp S  &hm LCTL D  &hm LGUI F    &kp G              &mt LA(SPACE) LG(SPACE)        &kp H                   &hm RCMD J    &hm RCTRL K   &hm RALT L  &hs LSHFT SEMI  &kp SQT
        &mt LSHIFT LPAR     &kp Z       &kp X       &kp C       &kp V         &kp B                       &none                 &kp N                   &kp M         &kp COMMA     &kp DOT     &kp FSLH        &mt RSHIFT RPAR
        &none               &none       &none       &mo LWR     &kp LCMD      &am LS(LALT) SPACE          &none                 &am LS(RC(LALT)) BSPC   &kp TAB       &mo RAS       &none       &none           &none
                        >;
			            sensor-bindings = <&inc_dec_kp LG(LS(RBKT)) LG(LS(LBKT))>;
                };

        lower_layer {        
            label = "Lower";              					  
		    bindings = <
        &none               &none       &none       &none       &none           &none                                           &kp N6                  &kp N7        &kp N8        &kp N9      &kp N0          &kp MINUS
        &none               &none       &none       &none       &none           &none               &kp LA(RG(SPACE))           &kp LEFT                &kp DOWN      &kp UP        &kp RIGHT   &trans          &none 
        &trans              &none       &none       &none       &none           &none                    &none                  &kp LBKT                &kp RBKT      &kp PG_UP     &kp END     &none           &trans
        &none               &none       &none       &trans      &none           &trans                   &none                  &trans                  &kp ENTER     &trans        &none       &none           &trans
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };
        raise_layer {        
            label = "Raise";              					  
		    bindings = <
        &kp EQUAL           &kp N1      &kp N2      &kp N3      &kp N4          &kp N5                                          &none                   &none         &none         &none       &none           &none 
        &none               &none       &none       &none       &none           &none                    &none                  &kp LEFT                &kp DOWN      &kp UP        &kp RIGHT   &trans          &none 
        &trans              &none       &none       &none       &kp LBRC        &kp RBRC                 &none                  &kp HOME                &kp PG_DN     &kp PG_UP     &kp END     &none           &trans
        &none               &none       &none       &trans      &none           &trans                   &none                  &trans                  &none         &trans        &none       &kp C_MUTE      &trans
                        >;
			            sensor-bindings = <&inc_dec_kp LG(LS(RBKT)) LG(LS(LBKT))>;
                };
        adjust_layer {        
            label = "Adjust";              					  
		    bindings = <
        &trans              &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &bt BT_CLR                                      &kp N6                  &kp N7        &kp N8        &kp N9      &kp N0          &none 
        &none               &none        &none        &none        &none           &none                    &kp QMARK              &kp LEFT                &kp DOWN      &kp UP        &kp RIGHT   &trans          &none 
        &none               &none        &none        &none        &none           &none                    &none                  &kp HOME                &kp PG_DN     &kp PG_UP     &kp END     &none           &none 
        &none               &none        &none        &trans       &none           &trans                   &none                  &trans                  &none         &trans        &none       &none           &trans
                        >;
			            sensor-bindings = <&inc_dec_kp LG(LS(LBKT)) LG(LS(RBKT))>;
                };       
        };
};
